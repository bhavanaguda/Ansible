---
- name: Pre-Checks and Installation
  hosts: localhost
  gather_facts: no
  become: yes
  become_method: sudo
  become_user: root
 
  vars:
    git_command: "git --version"
    maven_command: "mvn --version"
    kubectl_command: "kubectl version --client"
  sonar_url: "http://10.138.77.104:9000"
  docker_registry_url: "https://hub.docker.com/u/bhavanaguda"
 
  tasks:
    - name: Check if Git is installed
      command: "{{ git_command }}"
      register: git_result
      ignore_errors: yes
 
    - name: Install Git
      apt:
        name: git
        state: present
      when: git_result is failed
      register: git_install_result
 
    - name: Git Installation Status
      debug:
        msg: "{{ 'Git installed successfully.' if git_install_result is defined else 'Git is not installed.' }}"
      when: git_result is failed
 
    - name: Check if Maven is installed
      command: "{{ maven_command }}"
      register: maven_result
      ignore_errors: yes
 
    - name: Install Maven
      apt:
        name: maven
        state: present
      when: maven_result is failed
      register: maven_install_result
 
    - name: Maven Installation Status
      debug:
        msg: "{{ 'Maven installed successfully.' if maven_install_result is defined else 'Maven is not installed.' }}"
      when: maven_result is failed
 
    - name: Check if Kubernetes is installed
      command: "{{ kubectl_command }}"
      register: kubectl_result
      ignore_errors: yes
 
    - name: Install kubectl
      shell: |
       curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
       when: kubectl_result is failed
      register: kubectl_install_result
 
    - name: Kubernetes Installation Status
      debug:
        msg: "{{ 'kubectl installed successfully.' if kubectl_install_result is defined else 'kubectl is not installed.' }}"
      when: kubectl_result is failed
 
    - name: Check if SonarQube is reachable
      uri:
        url: "{{ sonar_url }}"
        return_content: yes
        status_code: 200
      register: sonar_result
      ignore_errors: yes
 
    - name: SonarQube Reachability Status
      debug:
        msg: "SonarQube is not reachable."
      when: sonar_result.status != 200
 
    - name: Check if Docker Registry is reachable
      uri:
        url: "{{ docker_registry_url }}"
        return_content: yes
        status_code: 200
      register: docker_result
      ignore_errors: yes
 
    - name: Docker Registry Reachability Status
      debug:
        msg: "Docker Registry is not reachable."
      when: docker_result.status != 200
